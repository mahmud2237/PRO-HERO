/*
Problem 05:  Predict Avarage Waiting Time 
‚ö†Ô∏è Function Name Must be waitingTime()
‡¶á‡¶∏‡¶∞‡¶æ‡¶§ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ö‡¶æ‡¶ï‡¶∞‡¶ø‡¶∞ ‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡¶≠‡¶ø‡¶â‡ßü‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡¶õ‡ßá‡•§ ‡¶§‡¶æ‡¶∞ ‡¶∏‡¶ø‡¶∞‡¶ø‡ßü‡¶æ‡¶≤ ‡¶Ü‡¶∏‡¶≤‡ßá ‡¶§‡¶æ‡¶ï‡ßá ‡¶°‡¶æ‡¶ï‡¶æ ‡¶π‡¶¨‡ßá‡•§  ‡¶¶‡ßá‡ßü‡¶æ‡¶≤‡ßá ‡¶è‡¶ï‡¶ü‡¶æ ‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶ø‡¶®‡ßá ‡¶Ø‡¶æ‡¶∞‡¶æ 
‡¶Ø‡¶æ‡¶∞‡¶æ ‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡¶≠‡¶ø‡¶â ‡¶¶‡¶ø‡ßü‡ßá‡¶õ‡ßá ‡¶§‡¶æ‡¶¶‡ßá‡¶∞ ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü ‡¶è‡¶¨‡¶Ç  ‡¶™‡ßç‡¶∞‡¶§‡ßç‡¶Ø‡ßá‡¶ï‡ßá‡¶∞ ‡¶ï‡¶§ ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü ‡¶∏‡¶Æ‡ßü ‡¶≤‡ßá‡¶ó‡ßá‡¶õ‡ßá ‡¶§‡¶æ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶ö‡ßç‡¶õ‡ßá‡•§  ‡¶á‡¶∏‡¶∞‡¶æ‡¶§ ‡¶¨‡ßÅ‡¶ù‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶õ‡ßá‡¶®‡¶æ ‡¶Ø‡ßá ‡¶§‡¶æ‡¶Å‡¶∞ 
‡¶Ü‡¶∏‡¶≤‡ßá ‡¶Ü‡¶∞ ‡¶ï‡¶§‡¶ï‡ßç‡¶∑‡¶® ‡¶∏‡¶Æ‡ßü ‡¶≤‡¶æ‡¶ó‡¶¨‡ßá‡•§  ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶ú ‡¶π‡¶≤‡ßã ‡¶á‡¶∏‡¶∞‡¶æ‡¶§‡ßá‡¶∞ ‡¶Ü‡¶∞ ‡¶ï‡¶§ ‡¶∏‡¶Æ‡ßü ‡¶≤‡¶æ‡¶ó‡¶¨‡ßá ‡¶§‡¶æ ‡¶ï‡ßç‡¶Ø‡¶æ‡¶≤‡¶ï‡ßÅ‡¶≤‡ßá‡¶∂‡¶® ‡¶ï‡¶∞‡ßá ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø 
waitingTime() ‡¶®‡¶æ‡¶Æ‡ßá ‡¶è‡¶ï‡¶ü‡¶æ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ‡•§ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶ü‡¶ø ‡ß® ‡¶ü‡¶æ input ‡¶®‡ßá‡¶¨‡ßá ‡•§  ‡ßß‡¶Æ ‡¶ü‡¶ø ‡¶π‡¶ö‡ßç‡¶õ‡ßá  ‡¶è‡¶ï‡¶ü‡¶æ number ‡¶è‡¶∞ Array ‡•§  
‡¶Ø‡¶æ‡¶¶‡ßá‡¶∞ ‡¶≠‡¶æ‡¶á‡¶≠‡¶æ ‡¶π‡ßü‡ßá ‡¶ó‡ßá‡¶õ‡ßá ‡¶§‡¶æ‡¶¶‡ßá‡¶∞  ‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡¶≠‡¶ø‡¶â ‡¶ü‡¶æ‡¶á‡¶Æ‡•§ ‡ß®‡ßü  ‡¶ü‡¶ø ‡¶π‡¶ö‡ßç‡¶õ‡ßá ‡¶á‡¶∏‡¶∞‡¶æ‡¶§‡ßá‡¶∞ ‡¶∏‡¶ø‡¶∞‡¶ø‡ßü‡¶æ‡¶≤ ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞‡•§  ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶ü‡¶ø ‡¶Ø‡¶æ‡¶¶‡ßá‡¶∞ ‡¶≠‡¶æ‡¶á‡¶≠‡¶æ ‡¶π‡ßü‡ßá ‡¶ó‡ßá‡¶õ‡ßá 
‡¶§‡¶æ‡¶¶‡ßá‡¶∞ ‡¶∏‡¶Æ‡ßü‡ßá‡¶∞ ‡¶è‡¶ï‡¶ü‡¶æ ‡¶è‡¶≠‡¶æ‡¶∞‡ßá‡¶ú ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶¨‡ßá ‡¶è‡¶¨‡¶Ç ‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶® ‡¶∏‡¶ø‡¶∞‡¶ø‡ßü‡¶æ‡¶≤‡ßá‡¶∞ ‡¶™‡¶∞ ‡¶•‡ßá‡¶ï‡ßá  ‡¶á‡¶∏‡¶∞‡¶æ‡¶§‡ßá‡¶∞ ‡¶Ü‡¶∞ ‡¶ï‡¶§ ‡¶∏‡¶Æ‡ßü ‡¶≤‡¶æ‡¶ó‡¶¨‡ßá ‡¶∏‡ßá‡¶ü‡¶æ ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶¨‡ßá 
‡¶è‡¶¨‡¶Ç ‡¶Ü‡¶â‡¶ü‡¶™‡ßÅ‡¶ü ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶ï‡¶∞‡¶¨‡ßá‡•§  

Input :  ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶ü‡¶ø ‡ß® ‡¶ü‡¶ø ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶®‡ßá‡¶¨‡ßá, ‡¶è‡¶ï‡¶ü‡¶ø ‡¶π‡¶≤‡ßã Array ( ‡¶Ø‡¶æ‡¶¶‡ßá‡¶∞ ‡¶≠‡¶æ‡¶á‡¶≠‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá ‡¶§‡¶æ‡¶¶‡ßá‡¶∞ ‡¶∏‡¶Æ‡ßü ), ‡¶Ö‡¶®‡ßç‡¶Ø‡¶ü‡¶ø ‡¶π‡¶≤‡ßã ‡¶á‡¶∏‡¶∞‡¶æ‡¶§‡ßá‡¶∞ 
‡¶∏‡¶ø‡¶∞‡¶ø‡ßü‡¶æ‡¶≤ ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞‡•§  (Serial Number >  length of array) 

Output : 
‡¶Ø‡¶æ‡¶¶‡ßá‡¶∞ ‡¶≠‡¶æ‡¶á‡¶≠‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá ‡¶§‡¶æ‡¶¶‡ßá‡¶∞ ‡¶∞‡¶æ‡¶â‡¶®‡ßç‡¶°‡ßá‡¶° ‡¶è‡¶≠‡¶æ‡¶∞‡ßá‡¶ú ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßã‡•§  ‡¶á‡¶∏‡¶∞‡¶æ‡¶§‡ßá‡¶∞ ‡¶Ü‡¶ó‡ßá ‡¶Ü‡¶∞ ‡¶ï‡ßü‡¶ú‡¶® ‡¶¨‡¶æ‡¶ï‡ßÄ ‡¶Ü‡¶õ‡ßá ‡¶§‡¶æ ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡•§  ‡¶è‡¶¨‡¶Ç ‡¶è‡¶á ‡¶¶‡ßÅ‡¶ü‡ßã ‡¶ú‡¶ø‡¶®‡¶ø‡¶∏  ‡¶¶‡¶ø‡ßü‡ßá ‡¶á‡¶∏‡¶∞‡¶æ‡¶§‡ßá‡¶∞ waiting time ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶∏‡ßá‡¶ü‡¶æ‡¶ï‡ßá return ‡¶ï‡¶∞‡ßá ‡¶¶‡¶æ‡¶ì‡•§   
Example:  array = [ 3, 5, 7, 11, 6 ]  , serial Number = 10
‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶è‡¶ñ‡¶æ‡¶®‡ßá 5 ‡¶ú‡¶®‡ßá‡¶∞   ‡¶è‡¶≠‡¶æ‡¶∞‡ßá‡¶ú ‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡¶≠‡¶ø‡¶â ‡¶ü‡¶æ‡¶á‡¶Æ ‡¶π‡¶≤‡ßã 6 minute (rounded)
‡¶à‡¶∏‡¶∞‡¶æ‡¶§‡ßá‡¶∞ ‡¶∏‡¶ø‡¶∞‡¶ø‡ßü‡¶æ‡¶≤ ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞ ‡ßß‡ß¶ ‡¶è‡¶∞ ‡¶Æ‡¶æ‡¶®‡ßá ‡¶π‡¶≤‡ßã ‡¶Ø‡ßá ‡¶§‡¶æ‡¶Å‡¶∞ ‡¶Ü‡¶ó‡ßá ‡¶Ü‡¶õ‡ßá 10-1 = 9 ‡¶ú‡¶®‡•§  
‡¶Ø‡ßá‡¶π‡ßá‡¶§‡ßÅ ‡ß´ ‡¶ú‡¶®‡ßá‡¶∞ ‡¶π‡ßü‡ßá ‡¶ó‡ßá‡¶õ‡ßá ‡¶∏‡ßá‡¶π‡ßá‡¶§‡ßÅ ‡¶á‡¶∏‡¶∞‡¶æ‡¶§‡ßá‡¶∞ ‡¶Ü‡¶ó‡ßá ‡¶Ü‡¶∞ ‡¶≠‡¶æ‡¶á‡¶¨‡¶æ ‡¶¨‡¶æ‡¶ï‡ßÄ ‡¶Ü‡¶õ‡ßá  4 ‡¶ú‡¶®‡ßá‡¶∞‡•§ ‡¶è‡¶¨‡¶æ‡¶∞ ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶á ‡¶¨‡¶≤‡ßã ‡¶Ø‡ßá ‡¶á‡¶∏‡¶∞‡¶æ‡¶§‡ßá‡¶∞ ‡¶ï‡¶§ ‡¶∏‡¶Æ‡ßü ‡¶≤‡¶æ‡¶ó‡¶¨‡ßá?   

Challenge üì¢ : ‡¶Ø‡¶¶‡¶ø ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶á‡¶®‡¶™‡ßÅ‡¶ü Array ‡¶®‡¶æ ‡¶π‡ßü ‡¶è‡¶¨‡¶Ç ‡ß®‡ßü ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶Ø‡¶¶‡¶ø ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞ ‡¶®‡¶æ ‡¶π‡ßü ‡¶§‡¶æ‡¶π‡¶≤‡ßá Invalid Input ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶ï‡¶∞‡¶¨‡ßá‡•§
SAMPLE: 
INPUT: [ 3, 5, 7, 11, 6 ], 10   OUTPUT: 24
INPUT: [13, 2], 6               OUTPUT: 24
INPUT: [13, 2, 6, 7, 10], 6     OUTPUT: 0
INPUT: [6], 4                   OUTPUT: 12
INPUT: 7 , 10                   OUTPUT: Invalid Input
INPUT: "[6,2]", 9               OUTPUT: Invalid Input
INPUT: [7, 8, 3, 4, 5], "9"     OUTPUT: Invalid Input
*/                                              

function  waitingTime(waitingTimes  , serialNumber) {
    if(!Array.isArray(waitingTimes) || typeof serialNumber !== 'number'){
        return 'Invalid Input';
    }
    let totalTime = 0;
    for(let i = 0; i < waitingTimes.length; i++ ){
        totalTime += waitingTimes[i];
    }
    let count = waitingTimes.length;
    let averageTime = Math.round(totalTime / count);
    let remainingCandidate = serialNumber - (count + 1);
    let serialNumberCandiateTime = remainingCandidate * averageTime;
    return serialNumberCandiateTime;
}
